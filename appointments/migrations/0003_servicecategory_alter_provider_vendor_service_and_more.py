# Generated by Django 5.0 on 2025-06-04 07:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('appointments', '0002_alter_provider_services'),
        ('main', '0091_passwordresetotp'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_category', models.CharField(max_length=100)),
            ],
        ),
        migrations.AlterField(
            model_name='provider',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_providers', to='main.vendorkyc'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('decription', models.TextField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes.')),
                ('buffer_time', models.PositiveIntegerField(default=0, help_text='Buffer time in minutes.')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color_code', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.JSONField(blank=True, default=list, null=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ven_services', to='main.vendorkyc')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cat_services', to='appointments.servicecategory')),
            ],
        ),
        migrations.AlterField(
            model_name='provider',
            name='services',
            field=models.ManyToManyField(blank=True, related_name='providers', to='appointments.service'),
        ),
    ]
